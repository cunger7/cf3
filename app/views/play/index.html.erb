<h1 class="site-title">Play</h1>
<div class="container">
  <div class="row">
    <div class="col-sm-12">
      <div id="board1" style="width: 400px; margin: auto"></div>
    </div>
  </div>
  <div class="row">
    <div class="col-sm-12">
      <p>Status: <span id="status"></span></p>
      <p>FEN: <span id="fen"></span></p>
      <p>PGN: <span id="pgn"></span></p>
    </div>
  </div>
</div>

<script type="text/javascript">

  var board,
  game = new Chess(),
  statusEl = $('#status'),
  fenEl = $('#fen'),
  pgnEl = $('#pgn');

// do not pick up pieces if the game is over
// only pick up pieces for the side to move
var onDragStart = function(source, piece, position, orientation) {
  if (game.game_over() === true ||
      (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
      (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
    return false;
  }
};

var onDrop = function(source, target) {
  // see if the move is legal
  var move = game.move({
    from: source,
    to: target,
    promotion: 'q' // NOTE: always promote to a queen for example simplicity
  });

  // illegal move
  if (move === null) return 'snapback';

  updateStatus();
};

// update the board position after the piece snap
// for castling, en passant, pawn promotion
var onSnapEnd = function() {
  board.position(game.fen());
};

var updateStatus = function() {
  var status = '';

  var moveColor = 'White';
  if (game.turn() === 'b') {
    moveColor = 'Black';
  }

  // checkmate?
  if (game.in_checkmate() === true) {
    status = 'Game over, ' + moveColor + ' is in checkmate.';
  }

  // draw?
  else if (game.in_draw() === true) {
    status = 'Game over, drawn position';
  }

  // game still on
  else {
    status = moveColor + ' to move';

    // check?
    if (game.in_check() === true) {
      status += ', ' + moveColor + ' is in check';
    }
  }

  statusEl.html(status);
  fenEl.html(game.fen());
  pgnEl.html(game.pgn());
};

  function pieceTheme(piece){
    piece = piece.toLowerCase();
    return 'http://images.chesscomfiles.com/chess-themes/pieces/classic/80/'+piece+'.png'
  }
  var cfg = {
    pieceTheme: pieceTheme,
    position: 'start',
    draggable: true,
    onDragStart: onDragStart,
    onDrop: onDrop,
    onSnapEnd: onSnapEnd
  };
  board = ChessBoard('board1', cfg);

  updateStatus();
</script>
